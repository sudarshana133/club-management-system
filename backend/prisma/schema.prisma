generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN
  STUDENT
}

model User {
  uId              String            @id @default(uuid())
  email            String            @unique
  password         String
  clubName         String?           @unique
  eventId          String?
  role             UserType
  members          Member[]
  registeredEvents RegisteredEvent[]
  adminOf          Club?
}

model Club {
  uId      String   @id @default(uuid())
  clubName String   @unique
  events   Event[]
  members  Member[]
  admin    User     @relation(fields: [adminId], references: [uId], onDelete: Cascade)
  adminId  String   @unique
}

model Event {
  uId                String            @id @default(uuid())
  title              String
  description        String
  date               DateTime
  venue              String
  fees               Int?              @default(0)
  clubId             String
  coordinators       Coordinator[]
  registeredStudents RegisteredEvent[]
  club               Club              @relation(fields: [clubId], references: [uId], onDelete: Cascade)
}

model Member {
  studentId    String        @unique
  clubId       String
  coordinators Coordinator[]
  user         User          @relation(fields: [studentId], references: [uId], onDelete: Cascade)
  club         Club          @relation(fields: [clubId], references: [uId], onDelete: Cascade)

  @@id([studentId, clubId])
}

model Coordinator {
  coordinatorId String
  eventId       String
  member        Member @relation(fields: [coordinatorId], references: [studentId], onDelete: Cascade)
  event         Event  @relation(fields: [eventId], references: [uId], onDelete: Cascade)

  @@id([coordinatorId, eventId])
}

model RegisteredEvent {
  userId  String
  eventId String
  user    User   @relation(fields: [userId], references: [uId], onDelete: Cascade)
  event   Event  @relation(fields: [eventId], references: [uId], onDelete: Cascade)

  @@id([userId, eventId])
}
